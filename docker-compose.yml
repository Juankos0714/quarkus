version: '3.8'

services:
  # Base de datos MongoDB
  mongodb:
    image: mongo:7.0
    container_name: quarkus-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: reactive_api_db
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d:ro
    networks:
      - app-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh mongodb://localhost:27017 --quiet
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Aplicación Quarkus
  quarkus-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: quarkus-reactive-api
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      # Configuración de MongoDB para Docker
      QUARKUS_MONGODB_CONNECTION_STRING: mongodb://admin:password123@mongodb:27017
      QUARKUS_MONGODB_DATABASE: reactive_api_db
      # Pool de conexiones
      QUARKUS_MONGODB_MAX_POOL_SIZE: 20
      QUARKUS_MONGODB_MIN_POOL_SIZE: 5
      QUARKUS_MONGODB_MAX_CONNECTION_IDLE_TIME: 30s
      QUARKUS_MONGODB_CONNECTION_TIMEOUT: 10s
      # Logging
      QUARKUS_LOG_LEVEL: INFO
      QUARKUS_LOG_CATEGORY__COM_EXAMPLE__LEVEL: DEBUG
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health/ready"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # MongoDB Express (opcional - para administración web)
  mongo-express:
    image: mongo-express:1.0.0
    container_name: mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password123
      ME_CONFIG_MONGODB_URL: mongodb://admin:password123@mongodb:27017/
      ME_CONFIG_BASICAUTH: false
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - app-network

volumes:
  mongodb_data:
    driver: local

networks:
  app-network:
    driver: bridge